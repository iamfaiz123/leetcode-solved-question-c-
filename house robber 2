class Solution {
public:
    int robber(vector<int>& nums)
    {
        if(nums.size() == 0)return 0;
        if(nums.size() == 1)return nums[0];
        if(nums.size() == 2)return nums[1];
        vector<int> apple(nums.size()+1);
        apple[0] = nums[0];
        apple[1] = max(nums[0],nums[1]);
        for(int i = 2;i<nums.size();i++)
        {
            apple[i] = max(apple[i-1],apple[i-2]+nums[i]);
        }
        return apple[nums.size()-1];
    }
    int rob(vector<int>& nums) {
       
         if(nums.size() == 0)return 0;
        if(nums.size() == 1)return nums[0];
        if(nums.size() == 2)return max(nums[1],nums[0]);
        
        vector<int> a(nums.begin()+1,nums.end());
        vector<int> b(nums.begin(),nums.end()-1);
        return max(robber(a),robber(b));
        
    }
};
