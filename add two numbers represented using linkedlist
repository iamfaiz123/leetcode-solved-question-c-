/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
            int carry = 0;
            int sum = 0;
            ListNode* current = new ListNode;
            auto prev = current;
            while(l1 or l2)
            {
                int a = l1?l1->val:0;
                int b = l2?l2->val:0;
                sum = a+b+carry;
                carry = sum/10;
                int data = sum%10;
                current->next = new ListNode(data);
                current = current->next;
                  l1 = l1 ? l1->next : l1;
                  l2 = l2 ? l2->next : l2;
            }
            if(carry)
            {
                    current->next = new ListNode(carry);
            }
            prev = prev->next;
            return prev;
        
    }
};
