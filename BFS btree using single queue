/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrder(TreeNode* root) {
        if(!root)return {};
        queue<TreeNode*> q;
        vector<vector<int>> arr;
        q.push(root);
        while(!q.empty())
        {
            int k = q.size();
            vector<int> temp_arr;
            while(k--)
            {
                auto temp_point = q.front();
                temp_arr.push_back(temp_point->val);
                q.pop();
                if(temp_point->left)q.push(temp_point->left);
                if(temp_point->right)q.push(temp_point->right);
                
            }arr.push_back(temp_arr);
            
            
        }
        return arr;
        
        
    }
};
